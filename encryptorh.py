# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'encryptor.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
from PyQt5.QtWidgets import QApplication, QMainWindow, QPushButton, QLabel, QVBoxLayout, QWidget

class AnotherWindow(QWidget):
    """
    This "window" is a QWidget. If it has no parent, it
    will appear as a free-floating window as we want.
    """
    def __init__(self):
        super().__init__()
        layout = QVBoxLayout()
        self.label = QLabel("Another Window")
        layout.addWidget(self.label)
        self.setLayout(layout)



class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(300, 504)
        MainWindow.setMinimumSize(QtCore.QSize(300, 504))
        MainWindow.setMaximumSize(QtCore.QSize(300, 504))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 234, 75))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 234, 75))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 234, 75))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 234, 75))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 234, 75))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 234, 75))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 234, 75))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 234, 75))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 234, 75))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        MainWindow.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("MS Sans Serif")
        font.setBold(False)
        font.setWeight(50)
        MainWindow.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("hero1.jpg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("background-color: rgb(255, 234, 75)")
        MainWindow.setIconSize(QtCore.QSize(20, 20))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.piclabel = QtWidgets.QLabel(self.centralwidget)
        self.piclabel.setGeometry(QtCore.QRect(40, 50, 211, 201))
        self.piclabel.setMaximumSize(QtCore.QSize(500, 500))
        self.piclabel.setScaledContents(True)
        self.piclabel.setObjectName("piclabel")
        self.label1 = QtWidgets.QLabel(self.centralwidget)
        self.label1.setGeometry(QtCore.QRect(30, 10, 231, 31))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(193, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 234, 75))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 234, 75))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 234, 75))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(204, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(193, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 234, 75))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 234, 75))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 234, 75))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(204, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 234, 75))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 234, 75))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 234, 75))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.label1.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("Nueva Std")
        font.setPointSize(22)
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.label1.setFont(font)
        self.label1.setStyleSheet("")
        self.label1.setObjectName("label1")
        self.readme = QtWidgets.QPushButton(self.centralwidget)
        self.readme.setGeometry(QtCore.QRect(100, 290, 91, 23))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.readme.setFont(font)
        self.readme.setStyleSheet("background-color: rgb(255, 150, 29)")
        self.readme.setObjectName("readme")
        self.comboe = QtWidgets.QComboBox(self.centralwidget)
        self.comboe.setGeometry(QtCore.QRect(70, 340, 151, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.comboe.setFont(font)
        self.comboe.setStyleSheet("background-color: rgb(255, 150, 29)")
        self.comboe.setObjectName("comboe")
        self.comboe.addItem("")
        self.comboe.addItem("")
        self.comboe.addItem("")
        self.comboe.addItem("")
        self.combom = QtWidgets.QComboBox(self.centralwidget)
        self.combom.setGeometry(QtCore.QRect(70, 390, 151, 31))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.combom.setFont(font)
        self.combom.setStyleSheet("background-color: rgb(255, 150, 29)")
        self.combom.setObjectName("combom")
        self.combom.addItem("")
        self.combom.addItem("")
        self.combom.addItem("")
        self.next = QtWidgets.QPushButton(self.centralwidget)
        self.next.setGeometry(QtCore.QRect(110, 440, 75, 23))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.next.setFont(font)
        self.next.setStyleSheet("background-color: rgb(255, 150, 29)")
        self.next.setObjectName("next")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 300, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.next.clicked.connect(self.show_popup)
        self.next.clicked.connect(self.pressed)
        self.readme.clicked.connect(self.show_new_window)


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Hero Encryptor"))
        self.piclabel.setText(_translate("MainWindow", "<html><head/><body><p><img src=\":/newPrefix/hero1.jpg\"/></p></body></html>"))
        self.label1.setText(_translate("MainWindow", "HERO ENCRYPTOR"))
        self.readme.setText(_translate("MainWindow", "READ ME"))
        self.comboe.setItemText(0, _translate("MainWindow", "Choose Encryption :"))
        self.comboe.setItemText(1, _translate("MainWindow", "AES"))
        self.comboe.setItemText(2, _translate("MainWindow", "Vigenere Cipher"))
        self.comboe.setItemText(3, _translate("MainWindow", "Caesar Cipher"))
        self.combom.setItemText(0, _translate("MainWindow", "Choose Mode :"))
        self.combom.setItemText(1, _translate("MainWindow", "Encrypt"))
        self.combom.setItemText(2, _translate("MainWindow", "Decrypt"))
        self.next.setText(_translate("MainWindow", "Next"))

    def aes(self):

        from Crypto.Cipher import AES
        from Crypto.Random import get_random_bytes

        def encryptor():
            a = input('Enter message to be encrypted: ')
            data = bytes(a, encoding='utf8')
            key = get_random_bytes(16)
            with open('test.bin', 'wb') as keyfile:
                keyfile.write(key)
            print("random key generated:\n", key, "\n SAVED TO 'test.bin'")
            cipher = AES.new(key, AES.MODE_EAX)
            ciphertext, tag = cipher.encrypt_and_digest(data)

            file_out = open("encrypted.bin", "wb")
            [file_out.write(x) for x in (cipher.nonce, tag, ciphertext)]
            file_out.close()

        def decryptor():
            file_in = open("encrypted.bin", "rb")
            nonce, tag, ciphertext = [file_in.read(x) for x in (16, 16, -1)]
            with open('test.bin', 'rb') as keyfile:
                key = keyfile.read()
            # key =open('test.bin', 'r').read()
            cipher = AES.new(key, AES.MODE_EAX, nonce)
            data = cipher.decrypt_and_verify(ciphertext, tag)
            print("Decrypted data: ", data)

        if self.combom.currentText() == "Encrypt":
            encryptor()
        elif self.combom.currentText() == "Decrypt":
            decryptor()

    def pressed(self):
        if self.comboe.currentText() == "AES":
            self.aes()

    def show_popup(self):
        msg = QMessageBox()
        msg.setWindowTitle("Welcome")
        msg.setText("This is text")
        msg.setIcon(QMessageBox.Information)
        #msg.setDefaultButton("GO!")
        msg.exec_()

    def show_new_window(self, checked):
        self.w = AnotherWindow()
        self.w.show()

import resource_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
